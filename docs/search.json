[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "SKAPLAN",
    "section": "",
    "text": "Overordnet om SKAPLAN\nMerk: Tidlig versjon av dokumentasjonen. Det er noe gjentakelser og slikt.\nUndervisningsplanleggingen er ment å være enkelt i bruk for de som planlegger og all planlegging gjøres på emnenivå. Dette gjøres i relativt enkle Excel-filer. All videre rapportering er basert på aggregering av disse filene.\nEt sett med R-script plukker opp alle data fra enkeltfilene og samler dette i et vanlig datasett. Dermed kan man skrive ut tabeller og annet etter behov. Det betyr at alle oversikter er basert på hva som er skrevet inn i enkeltfilene.\nDet samme gjelder diverse utvidelser: For personrapporter er det en fordel å vite slike ting som sluttdato, forskningstermin, utenlandsopphold, uniped og andre ting som skal gi uttelling eller tas høyde for på annet vis. Hvis man ikke vil inkludere slike ting lar man rett og slett bare være."
  },
  {
    "objectID": "oppsett.html#oppsett-og-forberedelser",
    "href": "oppsett.html#oppsett-og-forberedelser",
    "title": "1  Oppsett",
    "section": "1.1 Oppsett og forberedelser",
    "text": "1.1 Oppsett og forberedelser\n\n1.1.1 Filstruktur\nSystemet er basert på følgende filstruktur i arbeidsområdet.\n\n\n\nFilstruktur i arbeidsområdet\n\n\nHer er det altså inkludert git og Rstudio-projects hvis man ønsker bruke det.\n\n\n1.1.2 Filer i Teams og sync lokalt\nSystemet for emneplanlegging er lagret i en delt mappe i Teams. All planlegging av enkeltemner gjøres da i denne mappen av alle involverte. Undervisningsleder, instituttleder og kontorsjef har tilgang til hele Teamsmappen, mens alle andre får tilgang via delt lenke i Sharepoint.\nFor å kjøre R-programmene er det en fordel om Teams-mappen er synkronisert mot lokal mappe hos den ansvarlige for oppdateringene. Da kan R åpnes med .Rprojects, som er en fordel.\n\nFor å sync’e Teams filmappe, gå til Teams og klikk knapp som markert i rødt i bildet nedenfor\nFor å be om beskjed ved endringer i filer i Teams, klikk som markert i blått i bildet nedenfor. (En gang i uken er antakeligvis mer enn nok).\n\n\n\n\nSynkronisering av Teams-filer\n\n\nAll undervisning planlegges på emne-nivå slik at alle personlige undervisningsplaner er et aggregert resultat av planlegging av emner.\n\n\n1.1.3 Software\nOppsettet gjøres fra R. Det er brukt R 4.3.2 og følgende pakker:\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(openxlsx)\nlibrary(readxl)\nlibrary(stringr)\nlibrary(quarto)\nlibrary(pdftools) \nlibrary(here)\nlibrary(gtsummary)\nlibrary(gt)\n\nMed forbehold om at det kan være flere pakker i underscript.\nDet hele kjøres fra Rstudio. Det skal fungere med ulike Tex-installasjoner, men her er det bare brukt Tinytex installert fra R.\n\n\n1.1.4 Generer emnefiler\nUndermappen emner er kjernen i systemet. Hvert emne har et eget Excel-ark og filnavnet er emnekoden. I disse arkene er det en fane for hvert semester. Systemet bruker navnet på filene og fanene i aggregeringen slik at det er viktig at disse er riktige. Det betyr også at ved opprettelse av nye emner trenger man bare lage et nytt excel-ark med emnekode som filnavn. Tilsvarende kan man endre hvilke år og semestre emner går ved å endre navn på faner og/eller legge til eller slette nye faner.\nScriptet lage_excel_ark_alle_emner.R lager alle emnefiler og faner. Her lages også formatteringer, skjulte faner, validering av verdier og låste celler. Hver emnefil skal se slik ut:\n\n\n\nEmnefiler\n\n\nØverst er det en generell forklaring, og for hver kolonne er det en instruksjon til hvordan fylle ut. Dette altså for å minimere registreringsfeil. Alle celler unntatt der selve utfyllingen skal skje er låst.\nDet benyttes cellevalidering slik at første kolonne har en nedtrekksmeny for navn på undervisere. Denne navnelisten ligger i en skjult fane i arket. Hvis man skriver andre navn eller staver feil får man en feilmelding. Kolonnenen der aktiviteter skal registreres tillater kun tall.\nDet er tidkrevende å lage disse filene og kopiere manuelt, så dette gjøres altså maskinelt. Senere oppdateringer kan imidlertid godt gjøres manuelt ved å kopiere en fil og gi nytt navn etc. Til å lage disse filene trengs en liste over alle emnekoder og hvilke semestre de går og en oversikt over aktuelle undervisere.\nFiler som trengs for å komme igang:\n\ndata/emner_fraWeb_H.txt\ndata/emner_fraWeb_V.txt\ndata/stab.xlsx\ndata/stab_nye.xlsx\neksterne_undervisere.xlsx\nTP_personrapport[_semester_aar].xlsx\n\nDe to første filene er lister over emner som går i vår- og høstsemesteret. Alle emner som går ligger i utgangspunktet på nettsidene her: https://www.uio.no/studier/emner/sv/ Denne oversikten lar seg ikke så lett eksportere på en pen måte, så mitt forslag er å markere manuelt og kopiere over i en ren tekstfil. Siden semesteret ikke fremgår av listen gjøres dette to ganger og lagres i separate tekstfiler.\nDe resterende filene er oversikter over undervisere, både interne og eksterne. Det trengs ikke komplette lister for å gjøre oppsettet, men man kan like gjerne gjøre det skikkelig fra starten av.\nDet kalles et underscript med source(\"stab_andreFolk.R\") som lager en liste over alle undervisere. Denne listen brukes altså til å lage en nedtrekksmeny i emnefilene. Dette underscriptet brukes flere steder i systemet i innlesning og validering av navn.\nEn liste med navn på alle i staben og stillingstype er fått fra kontorsjefen og må oppdateres jevnlig. Filen stab_nye.xlsx benyttes til å skrive inn nyansatte som ikke har kommet i lista i staben ennå.\nI tillegg brukes en eller flere filer lastet ned fra TP herfra: https://tp.educloud.no/uio/report/ fra rapporttypen «fagpersonperspektiv». Jeg hadde problemer med riktig encoding, men ordnet seg ved å åpne fila i Notepad og lagre som UTF-8. Hvis filene får navn etter følgende standard leser scriptet inn alle og plukker ut unike navn: TP_personrapport_[semester_aar].xlsx. Her kan det være lurt å inkludere flere semestre for å få med alle aktuelle personer, og hvis filene får navn etter denne navnestandarden vil scriptet automatisk plukke opp alle disse filene fra TP.\nNår man fyller ut de enkelte excel-arkene bør det gjøres via Sharepoint (dvs. i nettleseren). Grunnen til dette er at valideringen av navn fungerer bedre slik enn via Teams eller desktop-applikasjon.\n\n1.1.4.1 Oppdatering av navnelister\nDet er avgjørende at navnelisten holdes oppdatert for at valideringen av celleverdiene i Excel-arkene skal fungere som tenkt. Nye navn kommer til, så oppdatering er nødvendig. Scriptet oppdater_stab.R gjør akkurat dette for alle xlsx-filer i emner-mappen, og alle nærmere angitte filer i data-mappen.\nMerk at dette skriptet oppdaterer den skjulte fanen ved navn “stab” i samtlige xlsx-filer i emner-mappen. Det samme gjøres i en del xlsx-filer i data-mappen. All oppdatering av navnelister i alle filer gjøres altså fra dette scriptet.\n\n\n1.1.4.2 Spesielle navn i navnelistene\nNavnelistene inneholder et par spesielle navn:\n\nAnnen brukes når man planlegger emner og det mangler navn i navnelisten kan navnet skrives i kommentarfeltet. Man velger da «Annen» i lista og det kan oppdateres senere.\nHakke P. Eiling og Ane-Rikke Hveem kan brukes der man vet man trenger en person, men vet ikke ennå hvem. Når man skriver ut rapporter senere vil det komme en egen rapport på Hakke P. Eiling, og det er altså fremtidig bemanningsbehov, fordelt på emner og oppgaver.\n\nNår det kjøres ut rapporter vil altså Hakke P. Eiling og Ane-Rikke Hveem komme med som egne rapporter som synliggjør fremtidig bemanningsbehov.\n\n\n\n1.1.5 Andre data og vedlikehold\nSystemet henter informasjon også fra andre steder basert på eksisterende lokale administrative rutiner. Disse er ISS-spesifikke. Herunder gjelder filbaner til fellesmapper og struktur på disse. Ved ISS har vi en del eksisterende rutiner for dette, og vi prøver bruke disse så langt som mulig.\nHvis systemet tas i bruk ved andre enheter må det tilpasses en rutine for å legge til tilsvarende informasjon.\nMerk: systemet oppsummerer de dataene som legges inn. Hva som kommer inn i rapportene avhenger av hva som legges inn, men er i liten grad avhengig av at alle deler er lagt inn.\nVed ISS gjelder dette følgende: Saldo fra timeregnskap leses inn fra iss-admfelles/Timeregnskap/ og mappen for forrige semester. Her ligger enkeltutskrifter fra timeregnskapet med navnekonvensjon [etternavn][fornavn][mellomnavn][SEMESTER] [ÅRSTALL][_OPPDATERT][.pdf] Hvis dette endres blir innlesning av saldo feil.\nFor midlertidige ansatte benyttes gjenstående timer (egen fil) og trekker fra siste saldo.\n\nPlanlagte forskningsterminer leses inn fra et annet område i MS Teams: Timeregnskap ved ISS. Filen Forskningsterminer_ISS.xlsx gir oversikt over forskningsterminer per semester som er avtalt med instituttleder, men også rett til forskningsterminer som er opparbeidet så langt.\nEn oversikt over staben må leveres fra kontorsjef og ligger i data-mappen med navn stab_2023.xlsx. Gjøres manuelt når man ber om det.\nOversikt over undervisere hentes manuelt fra https://tp.educloud.no/uio/report/ og lagres i en fil TP_personrapport_[aar].xlsx i data-mappen.\nFrikjøp hentes fra administrasjonsmappen “N:/iss-forskningsadministrasjon/7. Til ledelsen/Frikjøp/Frikjøp 2024-2027.xlsx”\nFilen oppdateres rutinemessig av forskningsadmin. hvert år og endrer navn med årstall. Det skal bare ligge en fil med navnet Frikjøp…, så scriptet leser inn den filen som har Frikjøp i navnet."
  },
  {
    "objectID": "systembeskrivelse.html#datahåndtering",
    "href": "systembeskrivelse.html#datahåndtering",
    "title": "2  Systembeskrivelse",
    "section": "2.1 Datahåndtering",
    "text": "2.1 Datahåndtering\nScript: 1_leseInnData.R\nDette scriptet samler data fra alle filer i et samlet datasett og lagrer dette datasettet til disk. Scriptet henter inn flere underscript som kalles med source() for lesbarhetens skyld. Hvert underscript samler en type data og leverer ett R-objekt til hovedscriptet.\nTil slutt skrives det ut en rapport med totalsum undervisning per semester for hele staben i en enkelt tabell som legges i samme mappe som emnefilene slik at det er lett tilgjengelig oversikt over stabens kapasitet når man planlegger enkeltemnene.\nScriptet starter med å kjøre en del underscript. Hver av disse kalles med source() for lesbarhet, men også med local = TRUE for å begrense antall objekter i minnet. Script som tar litt tid å kjøre (f.eks. innlesning av timeregnskapsaldo fra pdf-filer) lagrer Rdat-fil og kjøres bare på nytt hvis det er lenge siden sist filen ble laget. Hvis disse Rdat-filene slettes, så kjører scriptet på nytt. Mange andre script er veldig korte og tar ikke noe særlig tid, så har derfor ikke et slikt krav.\n\n\n\n\n\n\n\nScript\nFunksjon\n\n\n\n\nsource(“script/emnefiler.R”)\nLeser inn alle enkeltfiler for emner og restrukturerer til lang form.\n\n\nsource(“script/veiledning_ma.R”)\nLeser inn filer for planlagt veiledning (gjelder spesielt OLA4090). Har egen struktur.\n\n\nsource(“script/ekstra.R”)\nLeser inn oversikt over planlagt ekstra uttelling.\n\n\nsource(“script/uniped.R”)\nLeser inn oversikt over planlagt kurs i uniped\n\n\nsource(“script/norskkurs.R”)\nLeser inn oversikt over planlagt kurs i norskkurs. Gjelder nyansatte engelskspråklige.\n\n\nsource(“script/utenlandsopphold.R”)\nLeser inn oversikt over planlagt utenlandsopphold. Gjelder phd som får fratrekk for dette.\n\n\nsource(“script/verv.R”)\nLeser inn oversikt over verv som gir uttelling (programledere, ledergruppe etc)\n\n\nsource(“script/frikjop.R”)\nLeser inn oversikt over frikjøp. Timene legges inn\n\n\n\nDeretter gjøres følgende:\n\nLeser inn fakultetets satser for timeregnskap og andre lokale satser fra filen data/satser.xlsx\nLeser inn oversikt over emner som gir ekstra uttelling ved sensur og lage eksamen.\nLeser inn fil med variasjoner av skrivemåter for enkeltes navn med data/navn_variasjoner.xlsx\n\nSlår sammen alle filer fra ovennevnte script, kobler på satser mot type aktivitet og gjøre utregning. Emner med ekstra uttelling tas med i utregningene.\nFil med navn på skrivemåter av navn brukes som lookup-fil og korrigerer skrivemåte til korrekt der det er aktuelt.\nKonstruerer en fil med faste tillegg som tilkommer hvert semester.\nHenter inn saldoer fra timeregnskapet med: source(“script/leseTimeregnskap_fraPDF.R”)\nLegger til 15% uttelling for alle stipendiater på undervisningsaktiviteter.\nLagrer samlet datasett med utregninger til fil.\nLager en rapport med totalsummer per person per semester til pdf-fil."
  },
  {
    "objectID": "scriptbeskrivelser.html#saldo-fra-timeregnskapet",
    "href": "scriptbeskrivelser.html#saldo-fra-timeregnskapet",
    "title": "3  Detaljer om script",
    "section": "3.1 Saldo fra timeregnskapet",
    "text": "3.1 Saldo fra timeregnskapet\nScript: leseTimeregnskap.R\nRapportene på personnivå inkluderer en kolonne med saldo fra timeregnskapet forrige semester. For fast ansatte er dette saldoen kumulert slik det er oppgitt i Aura. For midlertidige ansatte er det derimot langt mer nyttig med hvor mange timer de har igjen av pliktarbeidet slik at summene i planen skal summeres til 0 mot slutten av kontraktsperioden.\n\n3.1.1 Oversiktsfil\nVed ISS lages det en oversikt over timeregnskap per person som ligger på området: N://iss-admfelles/Timeregnskap/ For fast ansatte er det kumulativt overskudd/underskudd, mens det for midlertidige ansatte er det gjenstående timer. Filstrukturen er slik at det legges til en ny kolonne nr 2 hvert semester og det er navn i første kolonne. Det er altså slik at det hvert semester trengs det å plukkes opp kun de to første kolonnene.\n\nMerk at det for de faste ansatte er det per i dag kun brukt etternavn. Scriptet gjør en korrigering ved å matche navn i staben mot fil på etternavn for å gi alle fullt navn.\nFor midlertidige ansatte er det tilsvarende, men det er gjenstående timer som rapporteres. For disse er det oppgitt fult navn, men det gjøres en sjekk mot alternative stavemåter for å få navnene riktig.\n\n\n3.1.2 Scrape pdf’er\nOversiktsfilen lages manuelt etter at timeregnskapet er avsluttet. Det er typisk behov for å kjøre rapporter før dette. Derfor er det laget et script som leser inn saldo fra enkeltutskrifter fra timeregnskapet.\nVed ISS lagres utskrifter fra AURA i en egen mappe på fellesdisk: N://iss-admfelles/Timeregnskap/ og det er en mappe for hvert år og semester. I hver slik undermappe er det egen mappe for faste ansatte og midlertidige ansatte.\nEnkeltutskrifter fra timeregnskapet er pdf-filer med navnekonvensjon [etternavn][fornavn][mellomnavn][SEMESTER] [ÅRSTALL][_OPPDATERT][.pdf].\nScriptet sjekker først om excel-filen for saldo finnes i mappen. Hvis den ikke gjør det, leser den inn data fra de enkelte pdf-filene. For faste ansatte plukkes opp saldoen fra linjen “totalt” som markert i bildet.\n\nFor midletidige ansatte fanges derimot opp summen av aktiviteter gjeldende semester som markert i nest bilde. Denne summen trekkes fra saldoen fra forrige semester slik at det er gjenstående sum som rapporteres til slutt."
  },
  {
    "objectID": "scriptbeskrivelser.html#frikjøp",
    "href": "scriptbeskrivelser.html#frikjøp",
    "title": "3  Detaljer om script",
    "section": "3.2 Frikjøp",
    "text": "3.2 Frikjøp\nScript: frikjop.R\nRutinen ved ISS er at en oversikt over registrert frikjøp per år fordelt på internt og eksternt frikjøp. Det legges til nye kolonner til høyre. Scriptet henter disse dataene fra kolonnen markert “eksternt” fra hvert årstall, regner ut prosentandelen og fører dette som antall undervisningstimer på hvert semester."
  },
  {
    "objectID": "scriptbeskrivelser.html#planlagt-forskningstermin",
    "href": "scriptbeskrivelser.html#planlagt-forskningstermin",
    "title": "3  Detaljer om script",
    "section": "3.3 Planlagt forskningstermin",
    "text": "3.3 Planlagt forskningstermin\nScript: forskningstermin_planlagt.R\nAdministrasjonen fører oversikt over opparbeidet rett til forskningstermin og avtalt forskningsterminer i en oversikt i egen Teams-gruppe. Dette er altså kun avtalt forskningstermin som betinges av at det er søkt om dette. Andre private planer fanges ikke opp."
  },
  {
    "objectID": "scriptbeskrivelser.html#diverse-andre-data",
    "href": "scriptbeskrivelser.html#diverse-andre-data",
    "title": "3  Detaljer om script",
    "section": "3.4 Diverse andre data",
    "text": "3.4 Diverse andre data\nScript:\n\nuniped.R\nverv.R\nekstra.R\nutenlandsopphold.R\nnorskkurs.R\n\nDisse scriptene er ganske like og henter informasjon fra enkel Excel-filer med tilsvarende struktur: kolonner med navn og antall timer avtalt."
  },
  {
    "objectID": "scriptbeskrivelser.html#sikkerhetskopi",
    "href": "scriptbeskrivelser.html#sikkerhetskopi",
    "title": "3  Detaljer om script",
    "section": "3.5 Sikkerhetskopi",
    "text": "3.5 Sikkerhetskopi\nGenerelt gjøres det sikkerhetskopi til github.uio.no."
  },
  {
    "objectID": "praktisk.html#legge-inn-data",
    "href": "praktisk.html#legge-inn-data",
    "title": "4  Praktisk bruk og rutiner",
    "section": "4.1 Legge inn data",
    "text": "4.1 Legge inn data\nI prinsippet gjør systemet bare en oppsamling, strukturering og aggregering av data som ligger et sted, primært i Excel-ark. Det er bare oppgaver som er registrert med en person som aggregeres.\n\n4.1.1 Undervisning\nUndervisning er registrert i Excel-ark som ligger i mappen /emner/. Det er en fil for hvert emne, og hvert semester føres i egen fane.\n\n\n4.1.2 Andre data som ikke ligger andre steder (det meste)\nI mappen /data/ ligger Excel-ark som inneholder data som er lagt inn manuelt, herunder verv (utdanningsleder, programledere osv), UNIPED,"
  },
  {
    "objectID": "praktisk.html#utsendelse-med-e-post",
    "href": "praktisk.html#utsendelse-med-e-post",
    "title": "4  Praktisk bruk og rutiner",
    "section": "4.2 Utsendelse med e-post",
    "text": "4.2 Utsendelse med e-post\nDet viste seg at ISS ikke fører en oppdatert liste over e-postadresser til ansatte utover det som står på ansattsidene på nettet. Scriptet get_email_staff_fromUiOhomepage.R henter ut e-postadresser fra ansattsidene på UiO, og lagrer disse i en fil som brukes til utsendelse av e-post.\nFor praktisk utsendelse brukes Excel og Outlook.^(Det viste seg å være vanskelig å sette opp epostklient direkte fra R, antakeligvis pga. UiO sitt oppsett. Men det er antakeligvis mer driftssikkert i Excel uansett.) Filen send_epost_alle_2024.xlsm har to faner. I fanen “epost” legger man inn navn i kolonne A og e-postadresser i kolonne B. Dette gjøres ved å kopiere fra filen som lages med get_email_staff_fromUiOhomepage.R. Det kan være mangler på hjemmesidene (sommel og slikt hos IT eller andre), så sjekk at alle er med.\nI fanen “personer” legger man inn de som skal ha tilsendt rapport. Navnet må være på formen fornan-etternavn slik som i fanen “e-post”, som også er filnavnet på personrapportene. Kolonne A har navnet, og kolonne B har formelen =XLOOKUP(A22;epost!A:A;epost!B:B) som henter e-postadressen fra fanen “epost” og matcher med navnet. I kolonne C er filbane til der personrapporten ligger. I malen er det samme filbane for alle, men kan altså variere.\nDet er en klikkbar boks i Excel-arket “Send rapport til alle!”. Denne aktiverer et VBA-script som er lagret i filen. Dette scriptet går gjennom listen i fanen “personer” og sender e-post til hver enkelt med vedlagt personrapport. For å åpne VBA-editor er hurtigtast Alt+F11. Scriptet gjør følgende:\n\nSpør deg om du er sikker på om du vil sende epost. Bekrefter du, går det videre. (Du kan altså komme borti knappen uten å skape trøbbel for deg selv.)\nLopper gjennom listen i fanen “personer”. Det kan ikke være personer i listen uten gyldig epostadresse. Da stopper loopen opp.\nÅpner Outlook og oppretter en epost til hver enkelt, med vedlagt personrapport og en kort standard tekst.\n\nDu må selv manuelt klikke på “Send” i hver epost. Dette er mest for å ha mulighet til å sjekke før man sender ut. Det er mulig å endre VBA-scriptet slik at det sender helt automatisk hvis man stoler såpass på at det blir riktig.\nMerk at riktig rapport til hver velges ved å matche mot navnet i kolonne A mot filnavn til rapporten. Navnekonvensjonen er derfor viktig.\nStandardteksten i eposten er lagret i VBA-scriptet. Den kan endres der. Det kan være lurt å teste med en liste med et fåtall personer først for å sjekke. En mulighet kunne sikkert vært å ha et txt-dokument med standardtekst separat som importeres eller andre løsninger, men jeg har tenkt at det er lurt å ha alt samlet i en fil.\n\n4.2.1 Hente eksisterende data"
  },
  {
    "objectID": "praktisk.html#rutiner-og-arbeidsdeling",
    "href": "praktisk.html#rutiner-og-arbeidsdeling",
    "title": "4  Praktisk bruk og rutiner",
    "section": "4.3 Rutiner og arbeidsdeling",
    "text": "4.3 Rutiner og arbeidsdeling\n\n4.3.1 Opprette nytt emne\n\n\n4.3.2 Endre semester på emne"
  },
  {
    "objectID": "praktisk.html#faq",
    "href": "praktisk.html#faq",
    "title": "4  Praktisk bruk og rutiner",
    "section": "4.4 FAQ",
    "text": "4.4 FAQ"
  }
]